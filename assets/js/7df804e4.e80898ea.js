"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[75865],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(67294),o=t(86010);const a="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,i),hidden:t},n)}},65488:(e,n,t)=>{t.d(n,{Z:()=>g});var r=t(87462),o=t(67294),a=t(86010),i=t(12466),s=t(99104),l=t(72389);const d="tabList__CuJ",c="tabItem_LNqP";function p(e){let{className:n,block:t,selectedValue:s,selectValue:l,tabValues:d}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),m=e=>{const n=e.currentTarget,t=p.indexOf(n),r=d[t].value;r!==s&&(u(n),l(r))},g=e=>{var n;let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}null==(n=t)||n.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n)},d.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>p.push(e),onKeyDown:g,onClick:m},i,{className:(0,a.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":s===n})}),t??n)})))}function u(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function m(e){const n=(0,s.Y)(e);return o.createElement("div",{className:(0,a.Z)("tabs-container",d)},o.createElement(p,(0,r.Z)({},e,n)),o.createElement(u,(0,r.Z)({},e,n)))}function g(e){const n=(0,l.Z)();return o.createElement(m,(0,r.Z)({key:String(n)},e))}},61877:(e,n,t)=>{t.d(n,{H:()=>a});var r=t(87462),o=t(67294);const a=e=>o.createElement("svg",(0,r.Z)({xmlns:"http://www.w3.org/2000/svg",width:8,height:12,viewBox:"0 0 8 12",fill:"none"},e),o.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M7.707 4.707a1 1 0 0 0 0-1.414l-3-3a1 1 0 0 0-1.414 0l-3 3a1 1 0 0 0 1.414 1.414L3 3.414V11a1 1 0 1 0 2 0V3.414l1.293 1.293a1 1 0 0 0 1.414 0Z",clipRule:"evenodd"}))},96244:(e,n,t)=>{t.d(n,{d:()=>C});var r=t(87462),o=t(67294),a=t(72389),i=t(95611),s=t(86010),l=t(86668),d=t(66412),c=t(37016),p=t(85448),u=t(23746),m=t(78397);const g=e=>{let{as:n,...t}=e;return o.createElement(n,(0,r.Z)({},t,{className:(0,s.Z)(t.className)}))},f=e=>o.createElement("svg",(0,r.Z)({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 448 512"},e),o.createElement("path",{fill:"currentColor",d:"M288 64c0 17.7-14.3 32-32 32H32C14.3 96 0 81.7 0 64s14.3-32 32-32h224c17.7 0 32 14.3 32 32zm0 256c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h224c17.7 0 32 14.3 32 32zM0 192c0-17.7 14.3-32 32-32h384c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zm448 256c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h384c17.7 0 32 14.3 32 32z"})),h=e=>o.createElement("svg",(0,r.Z)({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 448 512"},e),o.createElement("path",{fill:"currentColor",d:"M448 64c0-17.7-14.3-32-32-32H32C14.3 32 0 46.3 0 64s14.3 32 32 32h384c17.7 0 32-14.3 32-32zm0 256c0-17.7-14.3-32-32-32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32zM0 192c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32H32c-17.7 0-32 14.3-32 32zm448 256c0-17.7-14.3-32-32-32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32z"})),v=e=>{let{onClick:n,isEnabled:t}=e;const r=t?h:f;return o.createElement("button",{type:"button",onClick:()=>n(),className:(0,s.Z)("w-8 h-8","flex justify-center items-center","!bg-gray-900","bg-opacity-50","rounded","hover:!bg-gray-900 hover:bg-opacity-75",t&&"bg-opacity-100","group","transition-[background-color] duration-200 ease-in-out"),"aria-label":"Toggle word wrap",title:"Toggle word wrap"},o.createElement(r,{className:(0,s.Z)("w-4 h-4","text-gray-500",t&&"rotate-[360deg]","group-hover:scale-110","transition-transform duration-200 ease-in-out")}))},k=e=>o.createElement("svg",(0,r.Z)({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 16 16",fill:"none"},e),o.createElement("path",{fill:"currentColor",d:"M0 3a3 3 0 0 1 3-3h8a1 1 0 1 1 0 2H3a1 1 0 0 0-1 1v8a1 1 0 1 1-2 0V3Z"}),o.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M4 6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6Zm10 0H6v8h8V6Z",clipRule:"evenodd"})),y=e=>{let{code:n,className:t}=e;const[r,a]=(0,o.useState)(!1),i=(0,o.useRef)(void 0),l=(0,o.useCallback)((()=>{try{navigator.clipboard.writeText(n).then((()=>{a(!0),i.current=window.setTimeout((()=>{a(!1)}),1e3)}))}catch(e){}}),[n]);return(0,o.useEffect)((()=>()=>window.clearTimeout(i.current)),[]),o.createElement("button",{type:"button","aria-label":r?"Copied!":"Copy code to clipboard",title:"Copy code to clipboard",className:(0,s.Z)("w-8 h-8","flex justify-center items-center","!bg-gray-900","bg-opacity-50","rounded","hover:!bg-gray-900 hover:bg-opacity-75",r&&"bg-opacity-100","group","transition-[background-color] duration-200 ease-in-out"),onClick:l},o.createElement(k,{className:(0,s.Z)("w-4 h-4","text-gray-500",r&&"rotate-[360deg]","group-hover:scale-110","transition-transform duration-200 ease-in-out")}))},b=e=>{let{children:n,icon:t}=e;return o.createElement("div",{className:(0,s.Z)("py-3","px-4","text-sm","leading-6","text-gray-300","border-b","border-b-gray-900","font-mono","flex items-center","gap-2")},t&&o.createElement("div",{className:(0,s.Z)("-mt-1","-ml-2","-mb-1","w-8 h-8","rounded","bg-gray-800 bg-opacity-50","flex items-center justify-center")},t),n)},P=e=>{let{children:n,className:t="",metastring:a,title:i,showLineNumbers:f,language:h,icon:k,style:P}=e;const{prism:{defaultLanguage:C,magicComments:x}}=(0,l.L)(),w=h??(0,c.Vo)(t)??C,N=(0,d.p)(),E=(0,p.F)(),R=(0,c.bc)(a)||i,{lineClassNames:L,code:I}=(0,c.nZ)(n,{metastring:a,language:w,magicComments:x}),T=f??(0,c.nt)(a);return o.createElement(g,{as:"div",className:(0,s.Z)(w&&`language-${w}`,"rounded-lg","bg-gray-700","mb-6"),style:P},R&&o.createElement(b,{icon:k},R),o.createElement("div",{className:(0,s.Z)("relative","pt-4","pb-0","not-prose")},o.createElement(u.ZP,(0,r.Z)({},u.lG,{theme:N,code:I,language:w??"text"}),(e=>{let{className:n,tokens:t,getLineProps:r,getTokenProps:a}=e;return o.createElement("pre",{tabIndex:0,ref:E.codeBlockRef,className:(0,s.Z)(n,"bg-transparent","!mt-0","!mb-0","m-0","px-0","pt-0","pb-px","font-mono","thin-scrollbar","pb-4")},o.createElement("code",{className:(0,s.Z)("bg-transparent","inline-block","min-w-full")},t.map(((e,n)=>o.createElement(m.Z,{key:n,line:e,getLineProps:r,getTokenProps:a,classNames:(0,s.Z)(L[n],"px-4","text-xs sm:text-sm 2xl:text-base"),showLineNumbers:T})))))})),o.createElement("div",{className:(0,s.Z)("absolute","right-3","top-3","flex items-center gap-2")},(E.isEnabled||E.isCodeScrollable)&&o.createElement(v,{onClick:E.toggle,isEnabled:E.isEnabled}),o.createElement(y,{className:(0,s.Z)(),code:I}))))};const C=e=>{let{children:n,...t}=e;const s=(0,a.Z)(),l=function(e){return o.Children.toArray(e).some((e=>(0,o.isValidElement)(e)))?e:Array.isArray(e)?e.join(""):e}(n),d="string"==typeof l?P:i.Z;return o.createElement(d,(0,r.Z)({key:String(s)},t),l)}},55014:(e,n,t)=>{t.d(n,{Z:()=>N});var r=t(67294),o=t(96244),a=t(86010),i=t(52263),s=t(45772),l=t.n(s),d=t(74477);const c="playgroundPreview_jwe9";function p(e){let{children:n,minHeight:t,url:o="http://localhost:3000",hasBottom:i=!1}=e;return r.createElement("div",{className:(0,a.Z)("flex","flex-col","h-full")},r.createElement("div",{className:(0,a.Z)("flex-shrink-0","rounded-tl-lg","rounded-tr-lg","border-b","border-b-gray-200 dark:border-b-gray-900","px-4 py-2","flex items-center justify-center","bg-gray-100 dark:bg-gray-700","relative")},r.createElement("div",{className:(0,a.Z)("absolute","h-full","left-3","top-0","flex items-center justify-center","gap-1")},r.createElement("div",{className:(0,a.Z)("w-2.5 h-2.5","rounded-full","bg-refine-red")}),r.createElement("div",{className:(0,a.Z)("w-2.5 h-2.5","rounded-full","bg-refine-orange")}),r.createElement("div",{className:(0,a.Z)("w-2.5 h-2.5","rounded-full","bg-refine-green")})),r.createElement("div",{className:(0,a.Z)("rounded-lg","p-2","bg-gray-0 dark:bg-gray-800","flex items-center justify-center","text-gray-500 dark:text-gray-400","text-xs","w-full","max-w-[260px]","md:max-w-[320px]")},`${o}`.replace(/^http(s?):\/\//,""))),r.createElement("div",{className:(0,a.Z)("flex-1","overflow-hidden","p-1","bg-gray-100 dark:bg-gray-700",!i&&"rounded-bl-lg rounded-br-lg",i&&"border-b-gray-200 dark:border-b-gray-900",i&&"border-b"),style:{minHeight:t}},n))}const u=e=>{let{if:n,maxWait:t,children:o}=e;const[a,i]=r.useState(n),[s]=r.useState(t);r.useEffect((()=>{!a&&n&&i(!0)}),[n]),r.useEffect((()=>{if(s){const e=setTimeout((()=>{i(!0)}),s);return()=>clearTimeout(e)}}),[s]);const l=r.useMemo((()=>a&&"function"==typeof o?o():null),[a]);if(void 0!==o&&"function"!=typeof o)throw new Error("Conditional component requires a function as a child");return l};var m=t(57482),g=t(48764),f=t(61877);t.g.Buffer=t.g.Buffer||g.lW;const h=e=>{let{query:n,code:t,css:o}=e;const{siteConfig:{customFields:a}}=(0,i.Z)(),[s,d]=r.useState(void 0),c=r.useCallback((async e=>{if("undefined"!=typeof window&&window.Worker){const t=new Worker(`${location.protocol}//${location.host}/workers/lz-worker.js`);t.onmessage=function(e){let{data:r}=e;r.compressed&&d(`${a.LIVE_PREVIEW_URL}?code=${r.compressed}${o?`&css=${l().encode(o)}`:""}${n?`${n}`:""}`),t.terminate()},t.postMessage({code:e})}}),[n]);return r.useEffect((()=>{c(t)}),[t,c]),s?r.createElement("iframe",{loading:"lazy",src:s,width:"100%",height:"100%",style:{borderRadius:"3px",position:"absolute",left:0,top:0,width:"100%",height:"100%"}}):null},v=r.memo(h,((e,n)=>e.code===n.code&&e.query===n.query&&e.css===n.css));function k(e){let{hidden:n,code:t}=e;const o=r.useRef(null),[i,s]=r.useState(!n),[l,d]=r.useState(!n);return r.createElement(r.Fragment,null,r.createElement("button",{type:"button",className:(0,a.Z)("w-full","focus:outline-none","appearance-none","p-2","border-b","border-b-gray-200 dark:border-b-gray-900","flex items-center gap-2","bg-gray-100 dark:bg-gray-700",!i&&"rounded-bl-lg",!i&&"rounded-br-lg","transition-all ease-in-out duration-200",!i&&"delay-200","group"),onClick:()=>{i?(d(!1),setTimeout((()=>{s((e=>!e)),setTimeout((()=>{d(!0)}),300)}),100)):(d(!1),s((e=>!e)),setTimeout((()=>{d(!0)}),300))}},r.createElement("div",{className:(0,a.Z)("w-8 h-8","rounded","bg-gray-0 dark:bg-gray-800","dark:bg-opacity-50","flex items-center justify-center")},r.createElement(f.H,{className:(0,a.Z)("transition-transform duration-200 ease-in-out","text-gray-500",!i&&"rotate-180","w-3 h-3","group-hover:w-4 group-hover:h-4","transition-all duration-200 ease-in-out")})),r.createElement("span",{className:(0,a.Z)("text-sm leading-6","h-6","text-gray-700 dark:text-gray-400","uppercase","font-semibold","block","overflow-hidden")},r.createElement("span",{className:(0,a.Z)("block",i&&"opacity-0","transition-opacity duration-200 ease-in-out")},"Show Code"),r.createElement("span",{className:(0,a.Z)("block","transition-transform duration-200 ease-in-out","bg-gray-100 dark:bg-gray-700",i&&"-translate-y-6")},"Hide Code"))),r.createElement("div",{className:(0,a.Z)("bg-gray-700","rounded-bl-lg","rounded-br-lg"),style:{maxHeight:i?l?"unset":"100vh":"0px",transition:"0.3s all ease-in-out",overflow:"hidden"},ref:o},r.createElement(N,{language:"tsx",style:{borderRadius:0,marginBottom:0}},t)))}const y=e=>{let{children:n,disableScroll:t,previewHeight:o,hideCode:s=!1,url:l="http://localhost:3000",previewOnly:g=!1,tailwind:f=!1}=e;const h=String(n),{shared:y,sharedCss:b}=(0,m.dD)(),{visible:P}=(e=>{const n="// visible-block-start";let t=e.indexOf(n);t=t>0?t+n.length:0;let r=e.indexOf("// visible-block-end");r=r>0?r:e.length;const o=e.slice(0,t),a=e.slice(t,r).trimEnd().trimStart(),i=e.slice(r);return{visible:a,join:e=>`${o}\n${e}\n${i}`}})(`\n    ${y??""}\n    ${h}\n    `.replace(/\n$/,"")),C=r.useRef(null),x=function(e,n){void 0===n&&(n="0px");const[t,o]=r.useState(!1);return r.useEffect((()=>{const t=null==e?void 0:e.current,r=new IntersectionObserver((e=>{let[n]=e;o(n.isIntersecting)}),{rootMargin:n});return t&&r.observe(t),()=>{t&&r.unobserve(t)}}),[]),t}(C),{siteConfig:{customFields:w}}=(0,i.Z)(),{isLast:N}=(0,d.E)();return r.createElement("div",{className:(0,a.Z)("overflow-hidden","mb-6")},r.createElement(r.Fragment,null,r.createElement(p,{url:l,hasBottom:!g},r.createElement("div",{className:(0,a.Z)(c,"live-editor-wrapper"),style:{maxHeight:o,minHeight:o,overflow:t?"hidden":void 0,position:"relative"},ref:C},N?r.createElement(u,{if:x,maxWait:3e3},(()=>r.createElement(v,{code:`\n${y??""}\n${h}\n                                        `,css:b,query:`${t?"&disableScroll=true":""}${f?"&tailwind=true":""}`}))):r.createElement("div",{style:{height:"100%",minHeight:"inherit",display:"flex",alignItems:"center",justifyContent:"center",fontSize:"1.25rem"}},r.createElement("span",null,"Live previews only work with the latest documentation.")))),!g&&r.createElement(k,{hidden:s,code:P})))},b=r.memo(y,((e,n)=>String(e.children)===String(n.children))),P=e=>{let{children:n}=e;const{setShared:t}=(0,m.dD)();return r.useEffect((()=>(t(String(n)),()=>{t(void 0)})),[n]),null},C=r.memo(P,((e,n)=>String(e.children)===String(n.children))),x=e=>{let{children:n}=e;const{setSharedCss:t}=(0,m.dD)();return r.useEffect((()=>(t(String(n)),()=>{t(void 0)})),[n]),null},w=r.memo(x,((e,n)=>String(e.children)===String(n.children)));function N(e){var n;return e.live&&e.live&&null!=(n=e.className)&&n.includes("language-css")?r.createElement(w,e):e.shared&&e.live?r.createElement(C,e):e.live?r.createElement(b,e):r.createElement(o.d,e)}},46533:(e,n,t)=>{t.r(n),t.d(n,{Packages:()=>m,assets:()=>p,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=t(87462),o=(t(67294),t(3905)),a=t(65488),i=t(85162),s=t(55014);const l={id:"migration-guide",title:"Migration Guide"},d=void 0,c={unversionedId:"migration-guide",id:"version-3.xx.xx/migration-guide",title:"Migration Guide",description:"2.0.XX to 3.0.XX",source:"@site/versioned_docs/version-3.xx.xx/migration-guide.md",sourceDirName:".",slug:"/migration-guide",permalink:"/docs/3.xx.xx/migration-guide",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/versioned_docs/version-3.xx.xx/migration-guide.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Necati \xd6zmen",lastUpdatedAt:1686909221,formattedLastUpdatedAt:"Jun 16, 2023",frontMatter:{id:"migration-guide",title:"Migration Guide"},sidebar:"someSidebar",previous:{title:"Testing",permalink:"/docs/3.xx.xx/testing"},next:{title:"Licence",permalink:"/docs/3.xx.xx/licence"}},p={},u=[{value:"2.0.XX to 3.0.XX",id:"20xx-to-30xx",level:2},{value:"Motivation behind breaking changes",id:"motivation-behind-breaking-changes",level:3},{value:"\ud83e\ude84 Migrating your project automatically with refine-codemod \u2728 (recommended)",id:"-migrating-your-project-automatically-with-refine-codemod--recommended",level:2},{value:"Migrating your project manually",id:"migrating-your-project-manually",level:2},{value:"Updating the packages",id:"updating-the-packages",level:3},{value:"Change Import",id:"change-import",level:3},{value:"<code>notificationProvider</code>",id:"notificationprovider",level:3},{value:"<code>Layout</code> and <code>ErrorComponent</code>",id:"layout-and-errorcomponent",level:3},{value:"Default <code>LoginPage</code>",id:"default-loginpage",level:3},{value:"<code>configProviderProps</code> to <code>ConfigProvider</code>",id:"configproviderprops-to-configprovider",level:3},{value:"<code>setEditId</code> to <code>setId</code> &amp; <code>editId</code> to <code>id</code>",id:"seteditid-to-setid--editid-to-id",level:3}],m=()=>{const e=["@pankod/refine-airtable","@pankod/refine-altogic","@pankod/refine-graphql","@pankod/refine-hasura","@pankod/refine-nestjsx-crud","@pankod/refine-nextjs-router","@pankod/refine-react-router","@pankod/refine-simple-rest","@pankod/refine-strapi","@pankod/refine-strapi-v4","@pankod/refine-strapi-graphql","@pankod/refine-supabase","@pankod/refine-appwrite","@pankod/refine-ably"];return(0,o.kt)(a.Z,{defaultValue:"@pankod/refine-airtable",values:e.map((e=>({label:e,value:e}))),mdxType:"Tabs"},e.map((e=>(0,o.kt)(i.Z,{value:e,mdxType:"TabItem"},(0,o.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},`npm i ${e}@latest`)))))},g={toc:u,Packages:m};function f(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"20xx-to-30xx"},"2.0.XX to 3.0.XX"),(0,o.kt)("h3",{id:"motivation-behind-breaking-changes"},"Motivation behind breaking changes"),(0,o.kt)("p",null,"One of the big requests we received from the Community after we released the first version of ",(0,o.kt)("strong",{parentName:"p"},"refine")," was that ",(0,o.kt)("strong",{parentName:"p"},"refine")," could be used with different UI frameworks other than Ant Design.\nWe are happy to announce that you can use it as ",(0,o.kt)("strong",{parentName:"p"},"refine")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Headless")," on top of these requests. Now ",(0,o.kt)("strong",{parentName:"p"},"refine")," is a framework and works in harmony with the any UI framework you choose. At the same time, all projects made with Refine@2 are also Refine@3 compatible."),(0,o.kt)("p",null,"With ",(0,o.kt)("strong",{parentName:"p"},"refine")," 3.x.x ",(0,o.kt)("strong",{parentName:"p"},"headless")," version, we have released two new packages named ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-antd"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"refine-core")," package includes UI independent hooks and components. The ",(0,o.kt)("inlineCode",{parentName:"p"},"refine-antd")," package includes Ant Design components and there are table, form, select, etc hooks and components compatible with ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core"),"."),(0,o.kt)("h2",{id:"-migrating-your-project-automatically-with-refine-codemod--recommended"},"\ud83e\ude84 Migrating your project automatically with refine-codemod \u2728 (recommended)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/master/packages/codemod"},(0,o.kt)("inlineCode",{parentName:"a"},"@pankod/refine-codemod"))," package handles the breaking changes for your project automatically, without any manual steps. It migrates your project from ",(0,o.kt)("inlineCode",{parentName:"p"},"2.x.x")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"3.x.x"),"."),(0,o.kt)("p",null,"Just ",(0,o.kt)("inlineCode",{parentName:"p"},"cd")," into root folder of your project (where ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," is contained) and run this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx @pankod/refine-codemod refine2-to-refine3\n")),(0,o.kt)("p",null,"And it's done. Now your project uses ",(0,o.kt)("inlineCode",{parentName:"p"},"refine@3.x.x"),"."),(0,o.kt)("h2",{id:"migrating-your-project-manually"},"Migrating your project manually"),(0,o.kt)("h3",{id:"updating-the-packages"},"Updating the packages"),(0,o.kt)("p",null,"Packages used by your app must be updated to ",(0,o.kt)("inlineCode",{parentName:"p"},"^3.xx.xx")),(0,o.kt)("p",null,"@pankod/refine has been deprecated with ",(0,o.kt)("strong",{parentName:"p"},"refine")," 3.x.x version. You must now use ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-antd"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm uninstall @pankod/refine\n\nnpm i @pankod/refine-core @pankod/refine-antd\n")),(0,o.kt)(m,{mdxType:"Packages"}),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Make sure your using packages are version of 3.x.x otherwise you may get errors.")),(0,o.kt)("h3",{id:"change-import"},"Change Import"),(0,o.kt)("p",null,"UI independent import packages have been migrated to the ",(0,o.kt)("inlineCode",{parentName:"p"},"refine-core")," package with version ",(0,o.kt)("strong",{parentName:"p"},"refine")," 3.x.x."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Show All Core Imports"),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'[\n    "Authenticated",\n    "AuthenticatedProps",\n    "CanAccess",\n    "CanAccessProps",\n    "Refine",\n    "RefineProps",\n    "LayoutWrapperProps",\n    "LayoutWrapper",\n    "LayoutProps",\n    "DefaultLayout",\n    "RouteChangeHandler",\n    "UndoableQueue",\n    "defaultAccessControlContext",\n    "AccessControlContext",\n    "AccessControlContextProvider",\n    "CanParams",\n    "CanReturnType",\n    "IAccessControlContext",\n    "TLogoutVariables",\n    "TLogoutData",\n    "IAuthContext",\n    "Pagination",\n    "Search",\n    "CrudOperators",\n    "CrudFilter",\n    "CrudSort",\n    "CrudFilters",\n    "CrudSorting",\n    "CustomResponse",\n    "GetListResponse",\n    "CreateResponse",\n    "CreateManyResponse",\n    "UpdateResponse",\n    "UpdateManyResponse",\n    "GetOneResponse",\n    "GetManyResponse",\n    "DeleteOneResponse",\n    "DeleteManyResponse",\n    "IDataContext",\n    "IDataContextProvider",\n    "defaultDataProvider",\n    "DataContext",\n    "DataContextProvider",\n    "ILiveContext",\n    "ILiveContextProvider",\n    "LiveContext",\n    "LiveContextProvider",\n    "defaultNotificationProvider",\n    "NotificationContext",\n    "NotificationContextProvider",\n    "RefineContext",\n    "RefineContextProvider",\n    "ResourceContext",\n    "ResourceContextProvider",\n    "IResourceContext",\n    "OptionsProps",\n    "ResourceProps",\n    "IResourceComponentsProps",\n    "IResourceComponents",\n    "IResourceItem",\n    "RouterContext",\n    "RouterContextProvider",\n    "IRouterProvider",\n    "IRouterContext",\n    "PromptProps",\n    "TranslationContext",\n    "TranslationContextProvider",\n    "Translate",\n    "I18nProvider",\n    "ITranslationContext",\n    "UnsavedWarnContext",\n    "UnsavedWarnContextProvider",\n    "IUnsavedWarnContext",\n    "importCSVMapper",\n    "userFriendlyResourceName",\n    "userFriendlySecond",\n    "parseTableParams",\n    "parseTableParamsFromQuery",\n    "stringifyTableParams",\n    "compareFilters",\n    "unionFilters",\n    "setInitialFilters",\n    "file2Base64",\n    "UseCanProps",\n    "useCan",\n    "useCanWithoutCache",\n    "useAuthenticated",\n    "useCheckError",\n    "useGetIdentity",\n    "useIsAuthenticated",\n    "UseLoginReturnType",\n    "useLogin",\n    "useLogout",\n    "usePermissions",\n    "useIsExistAuthentication",\n    "unionFilters",\n    "useApiUrl",\n    "UseCreateReturnType",\n    "useCreate",\n    "UseCreateManyReturnType",\n    "useCreateMany",\n    "UseCustomProps",\n    "useCustom",\n    "useDelete",\n    "useDeleteMany",\n    "UseListProps",\n    "useList",\n    "UseManyProps",\n    "useMany",\n    "UseOneProps",\n    "useOne",\n    "UseUpdateReturnType",\n    "useUpdate",\n    "useUpdateMany",\n    "CSVDownloadProps",\n    "LabelKeyObject",\n    "useExport",\n    "Authenticated",\n    "CanAccess",\n    "LayoutWrapper",\n    "Refine",\n    "RouteChangeHandler",\n    "UndoableQueue",\n    "file2Base64",\n    "importCSVMapper",\n    "parseTableParams",\n    "parseTableParamsFromQuery",\n    "setInitialFilters",\n    "stringifyTableParams",\n    "unionFilters",\n    "useApiUrl",\n    "useAuthenticated",\n    "useCacheQueries",\n    "useCan",\n    "useCanWithoutCache",\n    "useCancelNotification",\n    "useCheckError",\n    "useCreate",\n    "useCreateMany",\n    "useCustom",\n    "useDelete",\n    "useDeleteMany",\n    "useExport",\n    "useGetIdentity",\n    "useGetLocale",\n    "useGetManyQueries",\n    "useGetOneQueries",\n    "useHandleNotification",\n    "useIsAuthenticated",\n    "useIsExistAuthentication",\n    "useList",\n    "useListResourceQueries",\n    "useLiveMode",\n    "useLogin",\n    "useLogout",\n    "useMany",\n    "useMutationMode",\n    "useNavigation",\n    "useNotification",\n    "useOne",\n    "usePermissions",\n    "usePublish",\n    "useRedirectionAfterSubmission",\n    "useRefineContext",\n    "useResource",\n    "useResourceSubscription",\n    "useResourceWithRoute",\n    "useRouterContext",\n    "useSetLocale",\n    "useShow",\n    "useSubscription",\n    "useSyncWithLocation",\n    "useTitle",\n    "useTranslate",\n    "useUpdate",\n    "useUpdateMany",\n    "useWarnAboutChange",\n    "userFriendlyResourceName",\n    "AuthenticatedProps",\n    "CanAccessProps",\n    "RefineProps",\n    "LayoutWrapperProps",\n    "LiveModeProps",\n    "UseResourceSubscriptionProps",\n    "PublishType",\n    "UseSubscriptionProps",\n    "LiveEvent",\n    "HistoryType",\n    "UseRedirectionAfterSubmissionType",\n    "UseWarnAboutChangeType",\n    "UseMutationModeType",\n    "useRefineContext",\n    "UseSyncWithLocationType",\n    "TitleProps",\n    "UseResourceType",\n    "useResourceWithRoute",\n    "useShowReturnType",\n    "useShowProps",\n    "UseGetLocaleType",\n    "Fields",\n    "NestedField",\n    "QueryBuilderOptions",\n    "MetaDataQuery",\n    "VariableOptions",\n    "HttpError",\n    "BaseRecord",\n    "Option",\n    "MapDataFn",\n    "MutationMode",\n    "IUndoableQueue",\n    "RedirectionTypes",\n    "ResourceErrorRouterParams",\n    "ResourceRouterParams",\n    "SuccessErrorNotification",\n    "OpenNotificationParams",\n    "AuthProvider",\n];\n')))),(0,o.kt)("p",null,"All of the imports defined above must now be imported from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core"),". UI related imports and other imports are now in ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-antd"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="App.tsx"',title:'"App.tsx"'},'- import { Refine } from "@pankod/refine";\n+ import { Refine } from "@pankod/refine-core";\nimport dataProvider from "@pankod/refine-json-server";\n\n- import "@pankod/refine/dist/styles.min.css";\n+ import "@pankod/refine-antd/dist/reset.css"\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n        />\n    );\n};\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"List Page Example"),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="PostList.tsx"',title:'"PostList.tsx"'},'- import {\n-    IResourceComponentsProps,\n-    useMany,\n-    List,\n-    TextField,\n-    TagField,\n-    DateField,\n-    Table,\n-    useTable,\n-    Space,\n-    EditButton,\n-    ShowButton,\n-    FilterDropdown,\n-    Select,\n-    useSelect,\n-    DeleteButton,\n- } from "@pankod/refine"\n\n+ import { IResourceComponentsProps, useMany } from "@pankod/refine-core";\n\n+ import {\n+    List,\n+    TextField,\n+    TagField,\n+    DateField,\n+    Table,\n+    useTable,\n+    Space,\n+    EditButton,\n+    ShowButton,\n+    FilterDropdown,\n+    Select,\n+    useSelect,\n+    DeleteButton,\n+} from "@pankod/refine-antd";\n\nimport { IPost, ICategory } from "interfaces";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    const { tableProps } = useTable<IPost>();\n\n    const categoryIds =\n        tableProps?.dataSource?.map((item) => item.category.id) ?? [];\n    const { data: categoriesData, isLoading } = useMany<ICategory>({\n        resource: "categories",\n        ids: categoryIds,\n        queryOptions: {\n            enabled: categoryIds.length > 0,\n        },\n    });\n\n    const { selectProps: categorySelectProps } = useSelect<ICategory>({\n        resource: "categories",\n    });\n\n    return (\n        <List>\n            <Table {...tableProps} rowKey="id">\n                <Table.Column dataIndex="title" title="title" />\n                <Table.Column\n                    dataIndex="status"\n                    title="status"\n                    render={(value) => <TagField value={value} />}\n                />\n                <Table.Column\n                    dataIndex="createdAt"\n                    title="createdAt"\n                    render={(value) => <DateField format="LLL" value={value} />}\n                />\n                <Table.Column\n                    dataIndex={["category", "id"]}\n                    title="category"\n                    render={(value) => {\n                        if (isLoading) {\n                            return <TextField value="Loading..." />;\n                        }\n\n                        return (\n                            <TextField\n                                value={\n                                    categoriesData?.data.find(\n                                        (item) => item.id === value,\n                                    )?.title\n                                }\n                            />\n                        );\n                    }}\n                    filterDropdown={(props) => (\n                        <FilterDropdown {...props}>\n                            <Select\n                                style={{ minWidth: 200 }}\n                                mode="multiple"\n                                placeholder="Select Category"\n                                {...categorySelectProps}\n                            />\n                        </FilterDropdown>\n                    )}\n                />\n                <Table.Column<IPost>\n                    title="Actions"\n                    dataIndex="actions"\n                    render={(_, record) => {\n                        return (\n                            <Space>\n                                <EditButton\n                                    hideText\n                                    size="small"\n                                    recordItemId={record.id}\n                                />\n                                <ShowButton\n                                    hideText\n                                    size="small"\n                                    recordItemId={record.id}\n                                />\n                                <DeleteButton\n                                    hideText\n                                    size="small"\n                                    recordItemId={record.id}\n                                />\n                            </Space>\n                        );\n                    }}\n                />\n            </Table>\n        </List>\n    );\n};\n\n')))),(0,o.kt)("h3",{id:"notificationprovider"},(0,o.kt)("inlineCode",{parentName:"h3"},"notificationProvider")),(0,o.kt)("p",null,"With ",(0,o.kt)("strong",{parentName:"p"},"refine")," 3.x.x, you can include and use different notification libraries in your project. The use of ",(0,o.kt)("inlineCode",{parentName:"p"},"notificationProvider")," with Ant Design should be as below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Refine } from "@pankod/refine-core";\n//highlight-start\nimport { notificationProvider } from "@pankod/refine-antd";\n//highlight-end\nimport dataProvider from "@pankod/refine-simple-rest";\nimport routerProvider from "@pankod/refine-react-router";\n\nimport "@pankod/refine-antd/dist/reset.css";\n\nimport { PostList, PostEdit, PostCreate, PostShow } from "./pages";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n            routerProvider={routerProvider}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                    canDelete: true,\n                },\n            ]}\n            //highlight-start\n            notificationProvider={notificationProvider}\n            //highlight-end\n        />\n    );\n};\n')),(0,o.kt)("h3",{id:"layout-and-errorcomponent"},(0,o.kt)("inlineCode",{parentName:"h3"},"Layout")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"ErrorComponent")),(0,o.kt)("p",null,"If you are using the default ",(0,o.kt)("inlineCode",{parentName:"p"},"layout")," of ",(0,o.kt)("strong",{parentName:"p"},"refine"),", you need to import and define it from the ",(0,o.kt)("inlineCode",{parentName:"p"},"refine-antd")," package as in the example below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Refine, AuthProvider } from "@pankod/refine-core";\nimport {\n    notificationProvider,\n    //highlight-start\n    Layout,\n    ErrorComponent,\n} from "@pankod/refine-antd";\n//highlight-end\nimport dataProvider from "@pankod/refine-simple-rest";\nimport routerProvider from "@pankod/refine-react-router";\n\nimport "@pankod/refine-antd/dist/reset.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            dataProvider={dataProvider(API_URL)}\n            routerProvider={routerProvider}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n            notificationProvider={notificationProvider}\n            //highlight-start\n            Layout={Layout}\n            catchAll={<ErrorComponent />}\n            //highlight-end\n        />\n    );\n};\n')),(0,o.kt)("h3",{id:"default-loginpage"},"Default ",(0,o.kt)("inlineCode",{parentName:"h3"},"LoginPage")),(0,o.kt)("p",null,"If you are using ",(0,o.kt)("strong",{parentName:"p"},"refine"),"'s default login page while using AuthProvider, you must now import and define ",(0,o.kt)("inlineCode",{parentName:"p"},"LoginPage")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-antd"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Refine, AuthProvider } from "@pankod/refine-core";\nimport {\n    notificationProvider,\n    //highlight-next-line\n    LoginPage,\n    Layout,\n    ErrorComponent,\n    //highlight-next-line\n} from "@pankod/refine-antd";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport routerProvider from "@pankod/refine-react-router";\n\nimport "@pankod/refine-antd/dist/reset.css";\n\nimport { PostList, PostEdit, PostShow } from "pages/posts";\nimport { DashboardPage } from "pages/dashboard";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            dataProvider={dataProvider(API_URL)}\n            routerProvider={routerProvider}\n            DashboardPage={DashboardPage}\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n            notificationProvider={notificationProvider}\n            //highlight-next-line\n            LoginPage={LoginPage}\n            Layout={Layout}\n            catchAll={<ErrorComponent />}\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("h3",{id:"configproviderprops-to-configprovider"},(0,o.kt)("inlineCode",{parentName:"h3"},"configProviderProps")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"ConfigProvider")),(0,o.kt)("p",null,"configProviderProps has been deprecated. Instead we use ",(0,o.kt)("inlineCode",{parentName:"p"},"ConfigProvider")," which is included in the ",(0,o.kt)("inlineCode",{parentName:"p"},"refine-antd")," package. If you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"ConfigProvider")," you need to wrap ",(0,o.kt)("inlineCode",{parentName:"p"},"Refine")," component as below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'import { Refine } from "@pankod/refine-core";\nimport {\n    notificationProvider,\n+   ConfigProvider,\n    Layout,\n    ErrorComponent,\n} from "@pankod/refine-antd";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport routerProvider from "@pankod/refine-react-router";\n\nimport "@pankod/refine-antd/dist/reset.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n+       <ConfigProvider direction={"rtl"}>\n            <Refine\n                dataProvider={dataProvider(API_URL)}\n                routerProvider={routerProvider}\n-               configProviderProps={{\n-                   direction: "rtl",\n-               }}\n                resources={[\n                    {\n                        name: "posts",\n                        list: PostList,\n                        create: PostCreate,\n                        edit: PostEdit,\n                        show: PostShow,\n                    },\n                ]}\n                notificationProvider={notificationProvider}\n                Layout={Layout}\n                catchAll={<ErrorComponent />}\n            />\n+       </ConfigProvider>\n    );\n};\n')),(0,o.kt)("h3",{id:"seteditid-to-setid--editid-to-id"},(0,o.kt)("inlineCode",{parentName:"h3"},"setEditId")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"setId")," & ",(0,o.kt)("inlineCode",{parentName:"h3"},"editId")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"id")),(0,o.kt)("p",null,"Change the use ",(0,o.kt)("inlineCode",{parentName:"p"},"setEditId")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"editId")," used in ",(0,o.kt)("inlineCode",{parentName:"p"},"useEditableTable"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useModalForm"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"useDrawerForm"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"setEditId")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"setId"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"editId")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"id")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="PostList"',title:'"PostList"'},'import { IResourceComponentsProps } from "@pankod/refine-core";\n\nimport {\n    List,\n    Table,\n    Form,\n    Space,\n    Button,\n    SaveButton,\n    EditButton,\n    Input,\n    TextField,\n    useEditableTable,\n} from "@pankod/refine-antd";\n\nimport { IPost } from "interfaces";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    const {\n        tableProps,\n        formProps,\n        isEditing,\n-       setEditId,\n+       setId,\n-       editId,\n+       id,\n        saveButtonProps,\n        cancelButtonProps,\n        editButtonProps,\n    } = useEditableTable<IPost>();\n};\n')))}f.isMDXComponent=!0}}]);